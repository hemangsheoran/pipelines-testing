module.exports = function(defaultFuncs, api, ctx) {
    return function youtubeDL(url, callback) {
        var resolveFunc = function() {};
        var rejectFunc = function() {};
        var returnPromise = new Promise(function(resolve, reject) {
            resolveFunc = resolve;
            rejectFunc = reject;
        });

        if (!callback) {
            callback = function(err, data) {
                if (err) return rejectFunc(err);
                resolveFunc(data);
            };
        }

        var key = require("./data/key_rapid.json");
        const length_KEY = key.keyVideo.length;
        const randomAPIKEY = key.keyVideo[Math.floor(Math.random() * length_KEY)]
        if (!url) return ({ error: 'Missing input data.' });

        var urlsplit = url.split(/^.*(youtu.be\/|v\/|shorts\/|embed\/|watch\?|youtube.com\/user\/[^#]*#([^\/]*?\/)*)\??v?=?([^#\&\?]*).*/);
        const linkUrlSing = urlsplit[3]
        if (!linkUrlSing) return ({ error: 'Check the url again!' });

        const request = require('request');
        const options = {
            method: 'GET',
            url: 'https://ytstream-download-youtube-videos.p.rapidapi.com/dl',
            qs: { id: linkUrlSing },
            headers: {
                'x-rapidapi-host': 'ytstream-download-youtube-videos.p.rapidapi.com',
                'x-rapidapi-key': randomAPIKEY.API_KEY,
                useQueryString: true
            }
        };
        request(options, function(error, response, body) {
            if (error) return ({ error: 'Your request cannot be processed.' })
            const data = JSON.parse(body);
            var link_vd, linkvd_HD, link_audio;

            var hdVd = (Object.keys(data.link)[1]) || (Object.keys(data.link)[0]);
            link_vd = data.link[hdVd];

            var linkvd_HD = (Object.keys(data.link)[2]);
            linkvd_HD = data.link[linkvd_HD];

            //var audio_url = (Object.keys(data.link)[8]) || (Object.keys(data.link)[9]);
            link_audio = data.link['249'] || data.link['250'];

            var jsonData = {
                status: data.status,
                title: data.title,
                thumb: data.thumb,
                length: data.length,
                lengthsec: data.lengthsec,
                view_count: data.view_count,
                description: data.description,
                link: {
                    SD: link_vd[0],
                    HD: linkvd_HD[0],
                    audio: link_audio[0]
                }
            };
            return callback(null, jsonData);
        })

        return returnPromise;
    };
};