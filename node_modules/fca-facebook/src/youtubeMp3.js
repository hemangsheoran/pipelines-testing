module.exports = function(defaultFuncs, api, ctx) {
    return function youtubeMp3(url, callback) {
        var resolveFunc = function() {};
        var rejectFunc = function() {};
        var returnPromise = new Promise(function(resolve, reject) {
            resolveFunc = resolve;
            rejectFunc = reject;
        });

        if (!callback) {
            callback = function(err, data) {
                if (err) return rejectFunc(err);
                resolveFunc(data);
            };
        }

        var key = require("./data/key_rapid.json");
        const length_KEY = key.keySing.length;
        const randomAPIKEY = key.keySing[Math.floor(Math.random() * length_KEY)]
        if (!url) return ({ error: 'Missing input data.' });

        var urlsplit = url.split(/^.*(youtu.be\/|v\/|shorts\/|embed\/|watch\?|youtube.com\/user\/[^#]*#([^\/]*?\/)*)\??v?=?([^#\&\?]*).*/);
        const linkUrlSing = urlsplit[3]
        if (!linkUrlSing) return ({ error: 'Check the url again!' });

        const request = require('request');
        const options = {
            method: 'GET',
            url: 'https://youtube-mp36.p.rapidapi.com/dl',
            qs: { id: linkUrlSing },
            headers: {
                'x-rapidapi-host': 'youtube-mp36.p.rapidapi.com',
                'x-rapidapi-key': randomAPIKEY.API_KEY,
                useQueryString: true
            }
        };
        request(options, function(error, response, body) {
            if (error) return ({ error: 'Your request cannot be processed.' })
            const data = JSON.parse(body);

            var jsonData = {
                msg: data.msg,
                title: data.title,
                link: data.link,
                duration: data.duration
            };
            return callback(null, jsonData);
        })

        return returnPromise;
    };
};